package com.butterflymob.entity;

import java.util.ArrayList;
import java.util.List;

public class ShareeventExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table shareEvent
     *
     * @mbg.generated Wed Dec 28 14:53:42 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table shareEvent
     *
     * @mbg.generated Wed Dec 28 14:53:42 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table shareEvent
     *
     * @mbg.generated Wed Dec 28 14:53:42 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shareEvent
     *
     * @mbg.generated Wed Dec 28 14:53:42 CST 2016
     */
    public ShareeventExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shareEvent
     *
     * @mbg.generated Wed Dec 28 14:53:42 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shareEvent
     *
     * @mbg.generated Wed Dec 28 14:53:42 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shareEvent
     *
     * @mbg.generated Wed Dec 28 14:53:42 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shareEvent
     *
     * @mbg.generated Wed Dec 28 14:53:42 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shareEvent
     *
     * @mbg.generated Wed Dec 28 14:53:42 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shareEvent
     *
     * @mbg.generated Wed Dec 28 14:53:42 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shareEvent
     *
     * @mbg.generated Wed Dec 28 14:53:42 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shareEvent
     *
     * @mbg.generated Wed Dec 28 14:53:42 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shareEvent
     *
     * @mbg.generated Wed Dec 28 14:53:42 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shareEvent
     *
     * @mbg.generated Wed Dec 28 14:53:42 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table shareEvent
     *
     * @mbg.generated Wed Dec 28 14:53:42 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andEventidIsNull() {
            addCriterion("eventId is null");
            return (Criteria) this;
        }

        public Criteria andEventidIsNotNull() {
            addCriterion("eventId is not null");
            return (Criteria) this;
        }

        public Criteria andEventidEqualTo(Integer value) {
            addCriterion("eventId =", value, "eventid");
            return (Criteria) this;
        }

        public Criteria andEventidNotEqualTo(Integer value) {
            addCriterion("eventId <>", value, "eventid");
            return (Criteria) this;
        }

        public Criteria andEventidGreaterThan(Integer value) {
            addCriterion("eventId >", value, "eventid");
            return (Criteria) this;
        }

        public Criteria andEventidGreaterThanOrEqualTo(Integer value) {
            addCriterion("eventId >=", value, "eventid");
            return (Criteria) this;
        }

        public Criteria andEventidLessThan(Integer value) {
            addCriterion("eventId <", value, "eventid");
            return (Criteria) this;
        }

        public Criteria andEventidLessThanOrEqualTo(Integer value) {
            addCriterion("eventId <=", value, "eventid");
            return (Criteria) this;
        }

        public Criteria andEventidIn(List<Integer> values) {
            addCriterion("eventId in", values, "eventid");
            return (Criteria) this;
        }

        public Criteria andEventidNotIn(List<Integer> values) {
            addCriterion("eventId not in", values, "eventid");
            return (Criteria) this;
        }

        public Criteria andEventidBetween(Integer value1, Integer value2) {
            addCriterion("eventId between", value1, value2, "eventid");
            return (Criteria) this;
        }

        public Criteria andEventidNotBetween(Integer value1, Integer value2) {
            addCriterion("eventId not between", value1, value2, "eventid");
            return (Criteria) this;
        }

        public Criteria andAppplatformIsNull() {
            addCriterion("appPlatform is null");
            return (Criteria) this;
        }

        public Criteria andAppplatformIsNotNull() {
            addCriterion("appPlatform is not null");
            return (Criteria) this;
        }

        public Criteria andAppplatformEqualTo(String value) {
            addCriterion("appPlatform =", value, "appplatform");
            return (Criteria) this;
        }

        public Criteria andAppplatformNotEqualTo(String value) {
            addCriterion("appPlatform <>", value, "appplatform");
            return (Criteria) this;
        }

        public Criteria andAppplatformGreaterThan(String value) {
            addCriterion("appPlatform >", value, "appplatform");
            return (Criteria) this;
        }

        public Criteria andAppplatformGreaterThanOrEqualTo(String value) {
            addCriterion("appPlatform >=", value, "appplatform");
            return (Criteria) this;
        }

        public Criteria andAppplatformLessThan(String value) {
            addCriterion("appPlatform <", value, "appplatform");
            return (Criteria) this;
        }

        public Criteria andAppplatformLessThanOrEqualTo(String value) {
            addCriterion("appPlatform <=", value, "appplatform");
            return (Criteria) this;
        }

        public Criteria andAppplatformLike(String value) {
            addCriterion("appPlatform like", value, "appplatform");
            return (Criteria) this;
        }

        public Criteria andAppplatformNotLike(String value) {
            addCriterion("appPlatform not like", value, "appplatform");
            return (Criteria) this;
        }

        public Criteria andAppplatformIn(List<String> values) {
            addCriterion("appPlatform in", values, "appplatform");
            return (Criteria) this;
        }

        public Criteria andAppplatformNotIn(List<String> values) {
            addCriterion("appPlatform not in", values, "appplatform");
            return (Criteria) this;
        }

        public Criteria andAppplatformBetween(String value1, String value2) {
            addCriterion("appPlatform between", value1, value2, "appplatform");
            return (Criteria) this;
        }

        public Criteria andAppplatformNotBetween(String value1, String value2) {
            addCriterion("appPlatform not between", value1, value2, "appplatform");
            return (Criteria) this;
        }

        public Criteria andAppversionIsNull() {
            addCriterion("appVersion is null");
            return (Criteria) this;
        }

        public Criteria andAppversionIsNotNull() {
            addCriterion("appVersion is not null");
            return (Criteria) this;
        }

        public Criteria andAppversionEqualTo(String value) {
            addCriterion("appVersion =", value, "appversion");
            return (Criteria) this;
        }

        public Criteria andAppversionNotEqualTo(String value) {
            addCriterion("appVersion <>", value, "appversion");
            return (Criteria) this;
        }

        public Criteria andAppversionGreaterThan(String value) {
            addCriterion("appVersion >", value, "appversion");
            return (Criteria) this;
        }

        public Criteria andAppversionGreaterThanOrEqualTo(String value) {
            addCriterion("appVersion >=", value, "appversion");
            return (Criteria) this;
        }

        public Criteria andAppversionLessThan(String value) {
            addCriterion("appVersion <", value, "appversion");
            return (Criteria) this;
        }

        public Criteria andAppversionLessThanOrEqualTo(String value) {
            addCriterion("appVersion <=", value, "appversion");
            return (Criteria) this;
        }

        public Criteria andAppversionLike(String value) {
            addCriterion("appVersion like", value, "appversion");
            return (Criteria) this;
        }

        public Criteria andAppversionNotLike(String value) {
            addCriterion("appVersion not like", value, "appversion");
            return (Criteria) this;
        }

        public Criteria andAppversionIn(List<String> values) {
            addCriterion("appVersion in", values, "appversion");
            return (Criteria) this;
        }

        public Criteria andAppversionNotIn(List<String> values) {
            addCriterion("appVersion not in", values, "appversion");
            return (Criteria) this;
        }

        public Criteria andAppversionBetween(String value1, String value2) {
            addCriterion("appVersion between", value1, value2, "appversion");
            return (Criteria) this;
        }

        public Criteria andAppversionNotBetween(String value1, String value2) {
            addCriterion("appVersion not between", value1, value2, "appversion");
            return (Criteria) this;
        }

        public Criteria andIsbackIsNull() {
            addCriterion("isBack is null");
            return (Criteria) this;
        }

        public Criteria andIsbackIsNotNull() {
            addCriterion("isBack is not null");
            return (Criteria) this;
        }

        public Criteria andIsbackEqualTo(Integer value) {
            addCriterion("isBack =", value, "isback");
            return (Criteria) this;
        }

        public Criteria andIsbackNotEqualTo(Integer value) {
            addCriterion("isBack <>", value, "isback");
            return (Criteria) this;
        }

        public Criteria andIsbackGreaterThan(Integer value) {
            addCriterion("isBack >", value, "isback");
            return (Criteria) this;
        }

        public Criteria andIsbackGreaterThanOrEqualTo(Integer value) {
            addCriterion("isBack >=", value, "isback");
            return (Criteria) this;
        }

        public Criteria andIsbackLessThan(Integer value) {
            addCriterion("isBack <", value, "isback");
            return (Criteria) this;
        }

        public Criteria andIsbackLessThanOrEqualTo(Integer value) {
            addCriterion("isBack <=", value, "isback");
            return (Criteria) this;
        }

        public Criteria andIsbackIn(List<Integer> values) {
            addCriterion("isBack in", values, "isback");
            return (Criteria) this;
        }

        public Criteria andIsbackNotIn(List<Integer> values) {
            addCriterion("isBack not in", values, "isback");
            return (Criteria) this;
        }

        public Criteria andIsbackBetween(Integer value1, Integer value2) {
            addCriterion("isBack between", value1, value2, "isback");
            return (Criteria) this;
        }

        public Criteria andIsbackNotBetween(Integer value1, Integer value2) {
            addCriterion("isBack not between", value1, value2, "isback");
            return (Criteria) this;
        }

        public Criteria andIsgrantIsNull() {
            addCriterion("isGrant is null");
            return (Criteria) this;
        }

        public Criteria andIsgrantIsNotNull() {
            addCriterion("isGrant is not null");
            return (Criteria) this;
        }

        public Criteria andIsgrantEqualTo(Integer value) {
            addCriterion("isGrant =", value, "isgrant");
            return (Criteria) this;
        }

        public Criteria andIsgrantNotEqualTo(Integer value) {
            addCriterion("isGrant <>", value, "isgrant");
            return (Criteria) this;
        }

        public Criteria andIsgrantGreaterThan(Integer value) {
            addCriterion("isGrant >", value, "isgrant");
            return (Criteria) this;
        }

        public Criteria andIsgrantGreaterThanOrEqualTo(Integer value) {
            addCriterion("isGrant >=", value, "isgrant");
            return (Criteria) this;
        }

        public Criteria andIsgrantLessThan(Integer value) {
            addCriterion("isGrant <", value, "isgrant");
            return (Criteria) this;
        }

        public Criteria andIsgrantLessThanOrEqualTo(Integer value) {
            addCriterion("isGrant <=", value, "isgrant");
            return (Criteria) this;
        }

        public Criteria andIsgrantIn(List<Integer> values) {
            addCriterion("isGrant in", values, "isgrant");
            return (Criteria) this;
        }

        public Criteria andIsgrantNotIn(List<Integer> values) {
            addCriterion("isGrant not in", values, "isgrant");
            return (Criteria) this;
        }

        public Criteria andIsgrantBetween(Integer value1, Integer value2) {
            addCriterion("isGrant between", value1, value2, "isgrant");
            return (Criteria) this;
        }

        public Criteria andIsgrantNotBetween(Integer value1, Integer value2) {
            addCriterion("isGrant not between", value1, value2, "isgrant");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table shareEvent
     *
     * @mbg.generated do_not_delete_during_merge Wed Dec 28 14:53:42 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table shareEvent
     *
     * @mbg.generated Wed Dec 28 14:53:42 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}